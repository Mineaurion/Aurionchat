plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

java {
    sourceCompatibility = 1.8
    targetCompatibility = 17
}

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.16.5'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'
            // property 'mixin.env.remapRefMap', 'true'
            // property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Disable GUI by default, the IDE console can be used to enter commands
            arg '-nogui'

            mods {
                aurionchat {
                    source sourceSets.main
                    source project(':common').sourceSets.getByName("main")
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     name "extra-mods"
    //     dir 'libs'
    // }
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    shadow project(':common')

    shadow 'com.google.code.gson:gson:2.10.1'
    shadow 'com.google.guava:guava:31.1-jre'
    // Real mod deobf dependency examples - these get remapped to your current mappings
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
    // implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency
    // compileOnly fg.deobf("curse.maven:luckperms-431733:3807269")

    // compileOnly fg.deobf("dev.ftb.mods:ftb-ranks-forge:1605.1.5-build.16")
    // runtimeOnly fg.deobf("dev.ftb.mods:ftb-ranks-forge:1605.1.5-build.16")

    // runtimeOnly fg.deobf("curse.maven:ftblibrary-404465:3553840") //ftb-library-forge-1605.3.4-build.90.jar
    // runtimeOnly fg.deobf("curse.maven:architectury-419699:3717921") // architectury v1.30.57

    // Examples using mod jars from ./libs
    // implementation fg.deobf("blank:architectury-1.30.57.jar")

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}


reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}
// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "aurionchat",
                //"Specification-Vendor": "aurionchat authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "aurionchat authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfShadowJar')

shadowJar {
    configurations = [project.configurations.shadow]

    dependencies {
        exclude '/mappings/*'
        exclude 'net.minecraft.*'
    }

    relocate 'com.rabbitmq', 'com.mineaurion.aurionchat.lib.rabbitmq'
    relocate 'org.slf4j', 'com.mineaurion.aurionchat.lib.slf4j'
    relocate 'net.kyori.adventure', 'com.mineaurion.aurionchat.lib.adventure'
    relocate 'net.kyori.event', 'com.mineaurion.aurionchat.lib.eventbus'
    relocate 'com.google', 'com.mineaurion.aurionchat.lib.google'

}
