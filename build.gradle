plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT' apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id "de.undercouch.download" version "5.6.0"
    id 'java'
}

def getWorkingBranch() {
    // Triple double-quotes for the breaklines
    def gitBranch = "Unknown branch"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (e) {
    }
    gitBranch = gitBranch.equalsIgnoreCase("master") ? "latest" : gitBranch;
    return "-" + gitBranch
}

subprojects { subProject ->
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    dependencies {
        api 'com.google.code.gson:gson:2.8.5'
        api 'com.rabbitmq:amqp-client:5.18.0'
        compileOnly 'net.luckperms:api:5.4'
        compileOnly 'org.apache.logging.log4j:log4j-api:2.19.0'
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
        }
    }

    group = project.pluginGroup
    version = project.pluginVersion

    build.dependsOn shadowJar

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    jar{
        archivesBaseName = project.jarName + "-" + project.name + getWorkingBranch()
    }
}


def urls = [
        [
                url: "https://download.getbukkit.org/spigot/spigot-1.20.4.jar",
                folder: 'spigot-1.20',
        ],
        [
                url: "https://github.com/IzzelAliz/Arclight/releases/download/Trials%2F1.0.5/arclight-forge-1.20.1-1.0.5.jar",
                folder: "arclight"
        ],
        [
                url: "https://serverjars.com/api/fetchJar/modded/fabric/1.20.4",
                folder: "fabric-1.20"
        ]
]

task downloadServerJar {
    urls.forEach {server ->
        download.run {
            src server.url
            dest "${projectDir}/run/" + server.folder + "/server.jar"
        }
        copy {
            from "${projectDir}/libs/start.sh"
            into "${projectDir}/run/" + server.folder
        }
        copy {
            from "${projectDir}/libs/start.bat"
            into "${projectDir}/run/" + server.folder
        }
    }
}

def localServerJar = [
        [
                file: "${projectDir}/libs/spigot-1.7.10-SNAPSHOT-b1657.jar",
                folder: "spigot-1.7"
        ],
        [
                file: "${projectDir}/libs/Thermos-1.7.10-1614-server.jar",
                folder: "thermos-1.7"
        ]
]

task copyLocalServerJar {
    dependsOn downloadServerJar
    localServerJar.forEach { server ->
        copy {
            from server.file
            into "${projectDir}/run/" + server.folder
            rename { "server.jar" }
        }
        copy {
            from "${projectDir}/libs/start.sh"
            into "${projectDir}/run/" + server.folder
        }
        copy {
            from "${projectDir}/libs/start.bat"
            into "${projectDir}/run/" + server.folder
        }
    }
}

evaluationDependsOn('fabric')
evaluationDependsOn('forge')

task prepareSpigotFile(type: Copy) {
    dependsOn copyLocalServerJar, project('bukkit').shadowJar
    from project('bukkit').shadowJar.outputs.files.singleFile
    into "${projectDir}/run/spigot-1.20/plugins/"
    rename { name -> 'AurionChat-Bukkit.jar' }
}
task cleanArclightFiles(type: Delete) {
    dependsOn copyLocalServerJar
    delete "${projectDir}/run/arclight/plugins/AurionChat-Bukkit.jar",
            "${projectDir}/run/arclight/mods/AurionChat-Forge.jar"
}
task prepareArclightBukkitFile(type: Copy) {
    dependsOn cleanArclightFiles, project('bukkit').shadowJar
    from project('bukkit').shadowJar.outputs.files.singleFile
    into "${projectDir}/run/arclight/plugins/"
    rename { name -> 'AurionChat-Bukkit.jar' }
}
task prepareArclightForgeFile(type: Copy) {
    dependsOn cleanArclightFiles, project('forge').shadowJar
    from project('forge').shadowJar.outputs.files.singleFile
    into "${projectDir}/run/arclight/mods/"
    rename { name -> 'AurionChat-Forge.jar' }
}
task prepareFabricFile(type: Copy) {
    dependsOn copyLocalServerJar, project('fabric').remappedShadowJar
    from project('fabric').remappedShadowJar.outputs.files.singleFile
    into  "${projectDir}/run/fabric-1.20/mods/"
    rename { name -> 'AurionChat-Fabric.jar' }
}
