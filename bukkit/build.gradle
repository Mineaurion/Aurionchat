repositories {
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    implementation project(':common')

    compileOnly 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
    api 'net.kyori:adventure-platform-bukkit:4.3.0'
    //compile files('libs/spigot-1.7.10-SNAPSHOT-b1657.jar')
}

processResources {
    duplicatesStrategy = 'include'
    from(sourceSets.main.resources.srcDirs) {
        expand 'version': project.version
    }
}

artifacts {
    archives shadowJar
}

shadowJar {
    relocate 'com.rabbitmq', 'com.mineaurion.aurionchat.lib.rabbitmq'
    relocate 'org.slf4j', 'com.mineaurion.aurionchat.lib.slf4j'
    relocate 'net.kyori.adventure', 'com.mineaurion.aurionchat.lib.adventure'
    relocate 'net.kyori.event', 'com.mineaurion.aurionchat.lib.eventbus'
}


def urls = [
    [
        url: "https://download.getbukkit.org/spigot/spigot-1.20.4.jar",
        folder: 'spigot-1.20',
    ],
    [
        url: "https://github.com/IzzelAliz/Arclight/releases/download/Trials%2F1.0.5/arclight-forge-1.20.1-1.0.5.jar",
        folder: "arclight"
    ]
]

task downloadServerJar{
    urls.forEach {server ->
        download.run {
            src server.url
            dest "${projectDir}/run/" + server.folder + "/server.jar"
        }
        copy {
            from "${projectDir}/libs/start.sh"
            into "${projectDir}/run/" + server.folder
        }
        copy {
            from "${projectDir}/libs/start.bat"
            into "${projectDir}/run/" + server.folder
        }
    }
}

def localServerJar = [
    [
        file: "${projectDir}/libs/spigot-1.7.10-SNAPSHOT-b1657.jar",
        folder: "spigot-1.7"
    ],
    [
        file: "${projectDir}/libs/Thermos-1.7.10-1614-server.jar",
        folder: "thermos-1.7"
    ]
]

task copyLocalServerJar {
    dependsOn downloadServerJar
    localServerJar.forEach { server ->
        copy {
            from server.file
            into "${projectDir}/run/" + server.folder
            rename { "server.jar" }
        }
        copy {
            from "${projectDir}/libs/start.sh"
            into "${projectDir}/run/" + server.folder
        }
        copy {
            from "${projectDir}/libs/start.bat"
            into "${projectDir}/run/" + server.folder
        }
    }
}